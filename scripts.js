document.addEventListener("DOMContentLoaded", () => {
    const texts = {
        ru: {
            back: "–ù–∞–∑–∞–¥",
            about: "–û–±–æ –º–Ω–µ",
            anime: "–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∞–Ω–∏–º–µ",
            games: "–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∏–≥—Ä–∞–º",
            aboutme: "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Young Shame. –£–≤–ª–µ–∫–∞—é—Å—å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –Ω–∞ –ª—é–±–∏—Ç–µ–ª—å—Å–∫–æ–º —É—Ä–æ–≤–Ω–µ, —Å–æ–∑–¥–∞—é —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –≤—Å–µ–≥–¥–∞ –∏—â—É —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –≤ —ç—Ç–æ–π —Å—Ñ–µ—Ä–µ. –ü–æ–º–∏–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —è —Ç–∞–∫–∂–µ –ª—é–±–ª—é –∏–≥—Ä—ã –∏ –º—É–∑—ã–∫—É. –í –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª –æ—Å–≤–∞–∏–≤–∞—Ç—å —Ä–æ–ª—å Achievement Hunter –∏ —Ä–∞–¥ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç—Ä–æ—Ñ–µ–∏ –≤ –∏–≥—Ä–∞—Ö. –í—Å—ë, —á—Ç–æ —è –¥–µ–ª–∞—é, –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—è –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ –Ω–æ–≤—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö.",
            leg: "–õ–µ–≥–µ–Ω–¥–∞ —Å–ø–∏—Å–∫–∞",
            leg1: "#üé´ = –õ–∏—Ü–µ–Ω–∑–∏—è (–ö—É–ø–ª–µ–Ω–∞ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∞ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º –º–∞–≥–∞–∑–∏–Ω–µ.)",
            leg2: "#‚ú¥Ô∏è = –ü–ª–∞—Ç–∏–Ω–∞ (–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.)",
            leg3: "#üé¨ = –°–º–æ—Ç—Ä—é",
            leg4: "#üìù = –í –ø–ª–∞–Ω–∞—Ö",
            leg5: "#‚úÖ = –ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ",
            leg6: "#üéÆ = –ü—Ä–æ—Ö–æ–∂—É",
            leg7: "#‚úÖ = –ü—Ä–æ—à–µ–ª",

        },
        en: {
            back: "Back",
            about: "About Me",
            anime: "My Anime Stats",
            games: "My Games Stats",
            aboutme: "Hi! I am a Young Shame. I am interested in web development at an amateur level, I create various projects and am always looking for something new in this field. Besides developing, I also love games and music. Recently, I have started to master the role of Achievement Hunter and am happy to earn trophies in games. Everything I do inspires me and helps me develop in new directions.",
            leg: "List Legend",
            leg1: "#üé´ = License (Purchased or obtained from the official store.)",
            leg2: "#‚ú¥Ô∏è = Platinum (Completing all achievements.)",
            leg3: "#üé¨ = I'm looking",
            leg4: "#üìù = In the plans",
            leg5: "#‚úÖ = Viewed",
            leg6: "#üéÆ = I'm passing",
            leg7: "#‚úÖ = Passed",
        }
    };

    const langBtns = document.querySelectorAll(".lang-btn");
    const backButton = document.querySelector(".page-links a");
    const pageButtons = document.querySelectorAll(".page-button");
    const elementsToTranslate = document.querySelectorAll("[data-translate]");

    const switchLanguage = (lang) => {
        document.title = lang === "ru" ? "Young Shame Profile" : "Young Shame Profile";

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º data-translate
        elementsToTranslate.forEach(element => {
            const key = element.getAttribute("data-translate");
            if (texts[lang] && texts[lang][key]) {
                element.textContent = texts[lang][key];
            }
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        if (backButton) {
            backButton.textContent = texts[lang].back;
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
        pageButtons.forEach((btn) => {
            if (btn.href.includes("about.html")) {
                btn.textContent = texts[lang].about;
            } else if (btn.href.includes("anime.html")) {
                btn.textContent = texts[lang].anime;
            } else if (btn.href.includes("games.html")) {
                btn.textContent = texts[lang].games;
            }
        });

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
        langBtns.forEach((btn) => {
            btn.textContent = btn.dataset.lang === "ru" ? "RU" : "EN";
        });
    }

    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏
    langBtns.forEach((btn) => {
        btn.addEventListener("click", () => {
            const lang = btn.dataset.lang;
            switchLanguage(lang);
            localStorage.setItem("language", lang);
        });
    });

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —è–∑—ã–∫ –∏–∑ localStorage
    const savedLang = localStorage.getItem("language") || "ru";
    switchLanguage(savedLang);
});
